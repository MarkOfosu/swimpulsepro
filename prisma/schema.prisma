model Coach {
  id        String      @id @default(cuid())
  userId    String
  teamId    String
  user      User        @relation(fields: [userId], references: [id])
  team      Team        @relation(fields: [teamId], references: [id])
  swimGroups SwimGroup[]
}

model SwimGroup {
  id        String      @id @default(cuid())
  name      String
  coachId   String
  coach     Coach       @relation(fields: [coachId], references: [id])
  swimmers  Swimmer[]
}

model Swimmer {
  id         String     @id @default(cuid())
  userId     String
  groupId    String
  user       User       @relation(fields: [userId], references: [id])
  swimGroup  SwimGroup  @relation(fields: [groupId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  coach         Coach?
  swimmer       Swimmer?
}

model Team {
  id          String   @id @default(cuid())
  name        String
  location    String
  adminId     String
  admin       User     @relation(fields: [adminId], references: [id])
  coaches     Coach[]
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
